version: "2.1"
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: zookeeper
    expose:
      - "2181"
    volumes:
      - kafka_zookeeper:/opt/zookeeper-3.4.13/data
    networks:
      kafkanet:
        ipv4_address: 172.25.0.11

  kafka1:
    image: confluentinc/cp-kafka:6.0.1
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: '172.25.0.11:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.25.0.12:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml 
    volumes:
      - ./kafka/prometheus:/prometheus
      - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
    networks:
      kafkanet:
        ipv4_address: 172.25.0.12

  kafka2:
    image: confluentinc/cp-kafka:6.0.1
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "29093:29092"
      - "9093:9092"
      - "9102:9101"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: '172.25.0.11:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://172.25.0.13:9093,PLAINTEXT_HOST://localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml 
    volumes:
      - ./kafka/prometheus:/prometheus
      - kafka_kafka2:/opt/kafka_2.12-2.2.0/logs
    networks:
      kafkanet:
        ipv4_address: 172.25.0.13

  kafka_manager:
    image: hlebalbau/kafka-manager:1.3.3.18
    container_name: kafka_manager
    expose:
      - "9000"
    environment:
      ZK_HOSTS: "172.25.0.11:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.14

  prometheus:
    image: prom/prometheus:v2.8.1
    container_name: prometheus
    expose:
      - "9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.15

  grafana:
    image: grafana/grafana:6.1.1
    container_name: grafana
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=password
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - "prometheus"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.16
  
  spark-master:        
    image: docker.io/bitnami/spark:3-debian-10
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '7077:7077'
      - '8088:8080'
    networks:
      kafkanet:
        ipv4_address: 172.25.0.17
  
  spark-worker-1:
    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://172.25.0.17:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      kafkanet:
        ipv4_address: 172.25.0.18
      
  spark-worker-2:
    image: docker.io/bitnami/spark:3-debian-10
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://172.25.0.17:7077
      - SPARK_WORKER_MEMORY=3G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    networks:
      kafkanet:
        ipv4_address: 172.25.0.19
      
  spark-application:
    build: ./services/spark.restconsumer/
    environment:
      SPARK_MASTER: 'local'
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
      - "kafka_manager"
      - "spark-worker-1"
      - "spark-worker-2"
      - "spark-master"
      - "kafka-producer"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.20
        
  kafka-producer:
    build: ./services/kafka.producer/
    environment:
      BOOTSTRAP_SERVERS: '172.25.0.12:29092'
      DELAY : 'false'
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.21
        
  core:
    build: ./services/core.currency-api/
    ports:
      - "9009:9000"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.22
        
  alpakka:
    build: ./services/alpakka.http.consumer/
    environment:
      BOOTSTRAP_SERVERS: '172.25.0.12:29092'
      CURRENCY_URL : 'http://172.25.0.22:9000/currency'
      PARA_LEVEL : 8
    container_name: alpakka
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
      - "core"
      - "spark-application"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.23
      

networks:
  kafkanet:
    name: kafkanet
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1

volumes:
  kafka_zookeeper:
  kafka_kafka1:
  kafka_kafka2:

